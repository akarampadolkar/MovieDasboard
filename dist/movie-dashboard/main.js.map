{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/movie-detail/movie-detail.component.css","webpack:///./src/app/movie-detail/movie-detail.component.html","webpack:///./src/app/movie-detail/movie-detail.component.ts","webpack:///./src/app/movie-filter.pipe.ts","webpack:///./src/app/movie-service.service.ts","webpack:///./src/app/movie.ts","webpack:///./src/app/people/people.component.css","webpack:///./src/app/people/people.component.html","webpack:///./src/app/people/people.component.ts","webpack:///./src/app/tvshows/tvshows.component.css","webpack:///./src/app/tvshows/tvshows.component.html","webpack:///./src/app/tvshows/tvshows.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TvshowsComponent } from './tvshows/tvshows.component';\nimport { PeopleComponent } from './people/people.component';\n\nconst routes: Routes = [\n  { path:'dashboard', component:DashboardComponent },\n  { path:'tvshows', component:TvshowsComponent },\n  { path:'people', component:PeopleComponent },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n<nav class=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n  <!-- Brand/logo -->\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\n  \\n  <!-- Links -->\\n  <ul class=\\\"navbar-nav\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\">{{showType[0]}}</a>            \\n    </li>\\n     <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/tvshows\\\">{{showType[1]}}</a>            \\n    </li>\\n     <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/people\\\">{{showType[2]}}</a>            \\n    </li>\\n  </ul>\\n</nav>\\n\\n\\n<!-- dashboard component bind -->\\n<br/>\\n<router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Movie Dashboard';\n\n  showType : any = ['Movies','TV Shows','People'];\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule }    from '@angular/common/http';\nimport { MovieFilterPipe } from './movie-filter.pipe';\nimport { MovieDetailComponent } from './movie-detail/movie-detail.component';\nimport { TvshowsComponent } from './tvshows/tvshows.component';\nimport { PeopleComponent } from './people/people.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    MovieFilterPipe,\n    MovieDetailComponent,\n    TvshowsComponent,\n    PeopleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\\n<div class=\\\"row\\\">  \\n     <div class=\\\"col-12\\\">                \\n          <input class=\\\"form-control form-control-lg form-control-borderless\\\" type=\\\"search\\\" placeholder=\\\"Search movie here\\\" [(ngModel)]=\\\"searchTerm\\\">\\n      </div>\\n</div>\\n\\n<hr/>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\" *ngFor=\\\"let movie of moviesList | movieFilter:searchTerm\\\">\\n      <img src=\\\"{{imageBaseURl }}{{movie.poster_path}}\\\" width=\\\"250px\\\" alt=\\\"movie picture\\\" data-toggle=\\\"modal\\\" \\n      data-target=\\\"#myModal\\\"      \\n      (click)=\\\"onSelect(movie)\\\">\\n      <p></p>\\n    </div>\\n</div>\\n<br/>\\n\\n<hr/>\\n\\n<!-- modal template -->\\n\\n<div class=\\\"container\\\">  \\n  <div class=\\\"modal\\\" id=\\\"myModal\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\">\\n      <div class=\\\"modal-content\\\">     \\n  \\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">Movie Detial</h4>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>        \\n  \\n        <div class=\\\"modal-body\\\">\\n\\n          <!-- binded movie detail component-->          \\n          <app-movie-detail [movie]=\\\"selectedMovie\\\"></app-movie-detail>\\n        </div>        \\n  \\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        </div>        \\n      </div>\\n    </div>\\n  </div>\\n  \\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport { MovieServiceService } from '../movie-service.service';\nimport { Movie } from '.././movie';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private movieServiceService: MovieServiceService) { }\n\n  ngOnInit() {\n    //service call for getting all movies\n  //  this.getMovies();\n    this.getMoviesList();\n  }\n\n  imageBaseURl = 'https://image.tmdb.org/t/p/w500/';\n  //movies: Movie[];\n  moviesList : any;\n\n /* getMovies(): void {\n     this.movieServiceService.getMovies()\n    .subscribe(movies => this.movies = movies);    \n  }*/\n\n  getMoviesList():void{\n    this.movieServiceService.getMoviesList()\n    .subscribe((item) => this.moviesList = item.results);        \n  }\n\n  //showing selected movie\n  selectedMovie: any;\n  onSelect(movie: any): void {    \n    this.selectedMovie = movie;\n  }\n\n}\n","module.exports = \".icon-circle{\\r\\n    border:1px solid black;\\r\\n    padding:10px;\\r\\n    border-radius: 50%;\\r\\n    margin:4px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW92aWUtZGV0YWlsL21vdmllLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvbW92aWUtZGV0YWlsL21vdmllLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmljb24tY2lyY2xle1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCBibGFjaztcclxuICAgIHBhZGRpbmc6MTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIG1hcmdpbjo0cHg7XHJcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"movie\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <img src=\\\"{{imageBaseURl}}{{movie.poster_path}}\\\" width=\\\"200px\\\" alt=\\\"movie picture\\\">\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <h3> {{movie.original_title}}</h3>  \\n\\n      <p> \\n        <span class=\\\"icon-circle\\\"><i class=\\\"fa fa-list\\\"></i></span>\\n        <span class=\\\"icon-circle\\\"><i class=\\\"fa fa-heart\\\"></i></span>\\n        <span class=\\\"icon-circle\\\"><i class=\\\"fa fa-star\\\"></i></span>\\n      </p>\\n\\n        <p> <b>Overview</b> : {{movie.overview}}</p>\\n        <p> <b>Realse Date</b> : {{movie.release_date}}</p> \\n        <p> <b>Rating</b> : {{movie.vote_average}} / 10</p>\\n        <p> <b>Language</b> : {{movie.original_language}}</p>\\n    </div>\\n  </div>      \\n</div>  \"","import { Component, OnInit , Input} from '@angular/core';\nimport { Movie } from '.././movie';\n\n@Component({\n  selector: 'app-movie-detail',\n  templateUrl: './movie-detail.component.html',\n  styleUrls: ['./movie-detail.component.css']\n})\nexport class MovieDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  imageBaseURl = 'https://image.tmdb.org/t/p/w500/';\n  @Input() movie: Movie;  \n}\n","import { PipeTransform ,Pipe} from '@angular/core';\r\n//import { Movie } from './movie';\r\n\r\n\r\n@Pipe({\r\n    name: 'movieFilter'\r\n})\r\n\r\nexport class MovieFilterPipe implements PipeTransform{\r\n     transform(movies:any, searchTerm: String): any{\r\n         if(!movies || !searchTerm){\r\n             return movies;\r\n         }\r\n\r\n         return movies.filter(movies =>\r\n         movies.original_title.toLowerCase().indexOf(searchTerm.toLowerCase()) !== -1);\r\n     }\r\n}","import { Injectable } from '@angular/core';\nimport { MOVIES } from './mock.movies';\nimport { Movie } from './movie';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map,catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  /*  getMovies(): Observable<Movie[]> {\n      return of(MOVIES);\n    }*/\n\n    private movieUrl = 'https://api.themoviedb.org/3/movie/now_playing?api_key=44e0a4e6bf0fd620f823de30916c528a&language=en-US&page=1';\n    private tvShowUrl = 'https://api.themoviedb.org/3/tv/airing_today?api_key=44e0a4e6bf0fd620f823de30916c528a&language=en-US&page=1';\n    private peopleUrl = 'https://api.themoviedb.org/3/person/popular?api_key=44e0a4e6bf0fd620f823de30916c528a&language=en-US';\n    \n    getMoviesList (): Observable<any> {\n      return this.http.get(this.movieUrl)\n      .pipe(\n          map((res) => res),\n          catchError((error) => error)\n        );\n    };\n\n    getTvShowList (): Observable<any>{\n      return this.http.get(this.tvShowUrl)\n      .pipe(\n        map((res) => res),\n        catchError((error) => error)\n      );\n    };\n\n    getPoepleList (pageNo) : Observable<any>{      \n      let url = '';\n      url = pageNo ? this.peopleUrl + '&page='+pageNo : this.peopleUrl + '&page=1';\n      \n      return this.http.get(url)\n      .pipe(\n        map((res) => res),\n        catchError((error) => error)\n      );\n    };\n    \n}\n","export class Movie {\r\n  id: number;\r\n  name: string;\r\n  image : string;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Blb3BsZS9wZW9wbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\" *ngFor=\\\"let people of peopleList\\\">      \\n      <div class=\\\"card\\\">\\n        <div *ngIf=\\\"people.profile_path\\\">\\n          <img src=\\\"{{imageBaseURl}}{{people.profile_path}}\\\" width=\\\"250px\\\" height=\\\"350px\\\" alt=\\\"profile\\\">\\n        </div>\\n        <div *ngIf=\\\"people.profile_path == null\\\">\\n          <img src=\\\"../../assets/img/download.png\\\" width=\\\"250px\\\" height=\\\"350px\\\" alt=\\\"profile\\\">\\n        </div>\\n        \\n        <p><b>{{people.name}}</b></p> \\n\\n     <!--   <p *ngFor=\\\"let known of people.known_for\\\">\\n            <span>{{known.original_tile}}</span>\\n        </p>-->\\n\\n      </div>\\n      <br/>\\n    </div>\\n</div>\\n<br/>\\n\\n<hr/>\\n<nav aria-label=\\\"Page navigation example\\\">\\n  <ul class=\\\"pagination\\\">    \\n    <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" (click)=\\\"getPeopleList(1)\\\">1</a></li>\\n    <li class=\\\"page-item\\\"><a class=\\\"page-link\\\"  (click)=\\\"getPeopleList(2)\\\">2</a></li>\\n    <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" (click)=\\\"getPeopleList(3)\\\">3</a></li>\\n    <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" (click)=\\\"getPeopleList(4)\\\">4</a></li>\\n    <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" (click)=\\\"getPeopleList(5)\\\">5</a></li>    \\n  </ul>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieServiceService } from '../movie-service.service';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html',\n  styleUrls: ['./people.component.css']\n})\nexport class PeopleComponent implements OnInit {\n\n  constructor(private movieServiceService:MovieServiceService) { }\n\n  peopleList : any;\n  imageBaseURl = 'https://image.tmdb.org/t/p/w500/';\n  ngOnInit() {\n    this.getPeopleList('');\n  }\n\n  getPeopleList(pageNo):void{\n    this.movieServiceService.getPoepleList(pageNo)\n    .subscribe((res) => this.peopleList = res.results);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R2c2hvd3MvdHZzaG93cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\" *ngFor=\\\"let tvshow of tvshowlist\\\">      \\n       <div *ngIf=\\\"tvshow.poster_path\\\">\\n          <img src=\\\"{{imageBaseURl}}{{tvshow.poster_path}}\\\" width=\\\"250px\\\" height=\\\"350px\\\" alt=\\\"tv poster\\\">\\n        </div>\\n        <div *ngIf=\\\"tvshow.poster_path == null\\\">\\n          <img src=\\\"../../assets/img/download.png\\\" width=\\\"250px\\\" height=\\\"350px\\\" alt=\\\"tv poster\\\">\\n        </div>\\n      <p></p>\\n    </div>\\n</div>\\n<br/>\\n\\n<hr/>\"","import { Component, OnInit } from '@angular/core';\nimport { MovieServiceService } from '../movie-service.service';\n\n@Component({\n  selector: 'app-tvshows',\n  templateUrl: './tvshows.component.html',\n  styleUrls: ['./tvshows.component.css']\n})\nexport class TvshowsComponent implements OnInit {\n\n  constructor(private movieServiceService: MovieServiceService) { }\n\n  ngOnInit() {\n    this.getTvShowList();\n  }\n\n  imageBaseURl = 'https://image.tmdb.org/t/p/w500/';\n  tvshowlist : any;\n\n  \n  getTvShowList():void{\n    this.movieServiceService.getTvShowList()\n    .subscribe((res) => this.tvshowlist = res.results);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}